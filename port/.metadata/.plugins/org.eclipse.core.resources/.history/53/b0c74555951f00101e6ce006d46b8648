package com.my.shop.service;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import com.my.shop.persistence.ShopDAO;
import com.my.shop.vo.CartListVO;
import com.my.shop.vo.CartVO;
import com.my.shop.vo.GoodsViewVO;
import com.my.shop.vo.OrderDetailVO;
import com.my.shop.vo.OrderListVO;
import com.my.shop.vo.OrderVO;
import com.my.shop.vo.ReplyListVO;
import com.my.shop.vo.ReplyVO;

@Service // 실제 서비스 클래스의 역할을 수행하는 클래스에 붙는 어노테이션
public class ShopServiceImpl implements ShopService {

    @Inject
    private ShopDAO dao;

    @Override
    // 카테고리 코드와 레벨 값을 기반으로 상품 리스트를 반환
    public List<GoodsViewVO> list(int cateCode, int level) throws Exception {
        int cateCodeRef = 0; // 카테고리 참조 코드 초기화

        /* 1차 카테고리일 경우 참조 코드 설정 */
        if (level == 1) { // 1차 카테고리
            cateCodeRef = cateCode;
            return dao.list(cateCode, cateCodeRef);
        } else { // 2차 카테고리
            return dao.list(cateCode);
        }
    }

    @Override
    // 상품 상세 정보 조회
    public GoodsViewVO goodsView(int gdsNum) throws Exception {
        return dao.goodsView(gdsNum);
    }

    @Override
    // 댓글 등록
    public void registReply(ReplyVO reply) throws Exception {
        dao.registReply(reply);
    }

    @Override
    // 댓글 리스트 조회
    public List<ReplyListVO> replyList(int gdsNum) throws Exception {
        return dao.replyList(gdsNum);
    }

    @Override
    // 댓글 삭제
    public void deleteReply(ReplyVO reply) throws Exception {
        dao.deleteReply(reply);
    }

    @Override
    // 댓글 작성자의 아이디 검증
    public String idCheck(int repNum) throws Exception {
        return dao.idCheck(repNum);
    }

    @Override
    // 댓글 수정
    public void modifyReply(ReplyVO reply) throws Exception {
        dao.modifyReply(reply);
    }

    @Override
    // 장바구니 항목 추가
    public void addCart(CartVO cart) throws Exception {
        dao.addCart(cart);
    }

    @Override
    // 장바구니 리스트 조회
    public List<CartListVO> cartList(String userId) throws Exception {
        return dao.cartList(userId);
    }

	// 카트 삭제
	@Override
	public void deleteCart(CartVO cart) throws Exception {
		dao.deleteCart(cart);
	}


	@Override//주문정보
	public void orderInfo(OrderVO order) throws Exception {
		dao.orderInfo(order);		
	}

	@Override//주문 상세 정보
	public void orderInfo_Details(OrderDetailVO orderDetail) throws Exception {
		dao.orderInfo_Details(orderDetail);	
	}

	@Override
	public void cartAllDelete(String userId) throws Exception {
	   dao.cartAllDelete(userId);
	}

	@Override
	public List<OrderVO> orderList(OrderVO order) throws Exception {
		return dao.orderList(order);
	}

	@Override
	public List<OrderListVO> orderView(OrderVO order) throws Exception {
		return dao.orderView(order);
	}

	
	
	
	
	
	
	
	
	
	

}
