/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2025-03-27 00:57:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin.goods;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../include/header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"container-fluid bg-gradient-primary\">\n");
      out.write("<div class=\"row\">\n");
      out.write("<div class=\"col-md-12\">\n");
      out.write("<div class=\"d-flex\">\n");
      out.write("<div class=\"w-25\">\n");
      out.write("<div class=\"mt-1\"></div>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/lnb.jsp", out, false);
      out.write("\n");
      out.write("</div>\n");
      out.write("<div class=\"w-75 p-4\">\n");
      out.write("<h2 class=\"mt-5 mb-3 text-white\">상품등록</h2>\n");
      out.write("<form method=\"post\" enctype=\"multipart/form-data\"><!-- 이미지나 다른 파일을 등록할때  -->\n");
      out.write("<div class=\"input-group\">\n");
      out.write("<label class=\"form-label text-white\">1차 분류</label>\n");
      out.write("<select class=\"form-select category1 mx-3\">\n");
      out.write("<option value=\"\">\n");
      out.write("전체\n");
      out.write("</option>\n");
      out.write("</select>\n");
      out.write("<label class=\"form-label text-white\">2차 분류</label>\n");
      out.write("<select class=\"form-select category2 mx-3\" name=\"cateCode\">\n");
      out.write("<option value=\"\">\n");
      out.write("전체\n");
      out.write("</option>\n");
      out.write("</select>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"input-group mt-5\">\n");
      out.write("<label class=\"form-label text-white w-10\">상품명</label>\n");
      out.write("<input type=\"text\" id=\"gdsName\" name=\"gdsName\" class=\"form-control w-90\" required/>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"input-group mt-5\">\n");
      out.write("<label class=\"form-label text-white w-10\">상품가격</label>\n");
      out.write("<input type=\"text\" id=\"gdsPrice\" name=\"gdsPrice\" class=\"form-control w-90\" required/>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"input-group mt-5\"><!-- 실패하는 경우 수량에는 숫자가 아닌 문자열을 사용할수 없게 만듬 10 11많음 -->\n");
      out.write("<label class=\"form-label text-white w-10\">상품수량</label>\n");
      out.write("<input type=\"text\" id=\"gdsStock\" name=\"gdsStock\" class=\"form-control w-90\" required/>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"input-group mt-5\">\n");
      out.write("<label class=\"form-label text-white w-10\">상품소개</label>\n");
      out.write("<textarea rows=\"5\" id=\"gdsDes\" name=\"gdsDes\" class=\"form-control\" required>내용을 적어주세요</textarea>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/ckeditorConfig.js\">\n");
      out.write("</script>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"input-group mt-5\"><!-- 실제 파일을 올리는곳 -->\n");
      out.write("<label class=\"form-label text-white w-10\">이미지</label>\n");
      out.write("<input type=\"file\" id=\"gdsImg\" name=\"file\" class=\"form-control w-90\"/>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- 아래는 올린 이미지를 확인 -->\n");
      out.write("<div class=\"select_img my-3\">\n");
      out.write("<img src=\"\" style=\"width:100px;\"/>\n");
      out.write("</div>\n");
      out.write("<div class=\"d-flex\">\n");
      out.write("<div class=\"text-white\">원본 이미지</div>\n");
      out.write("<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${goods.gdsImg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"width:100px;\"/>\n");
      out.write("<div class=\"text-white\">썸네일</div>\n");
      out.write("<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${goods.gdsThumbImg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"width:50px;\"/>\n");
      out.write("</div>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/changeImgFunction.js\"></script>\n");
      out.write("<div class=\"text-white\">");
      out.print(request.getRealPath("/") );
      out.write("</div>\n");
      out.write("<button type=\"submit\" id=\"register_Btn\" class=\"btn btn-warning btn-lg btn-block my-4\">\n");
      out.write("등록\n");
      out.write("</button>\n");
      out.write("</form>\n");
      out.write("<script>\n");
      out.write("let jsonData = JSON.parse('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${category}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\n");
      out.write("</script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jsonDrop.js\"><!--2개의 드롭다운으로 카테고리를 선택할때 json으로 오라클에db 카테고리를 선택-->\n");
      out.write("</script>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../include/footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
